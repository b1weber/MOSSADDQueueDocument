//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MOSSADDQueueDocument.ICEDocument {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalSystem", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum ExternalSystem : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleSource = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.RecipientItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.DocumentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem))]
    public partial class ListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UniqueIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueID {
            get {
                return this.UniqueIDField;
            }
            set {
                if ((this.UniqueIDField.Equals(value) != true)) {
                    this.UniqueIDField = value;
                    this.RaisePropertyChanged("UniqueID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipientItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class RecipientItem : MOSSADDQueueDocument.ICEDocument.ListItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RightFaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipient {
            get {
                return this.RecipientField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientField, value) != true)) {
                    this.RecipientField = value;
                    this.RaisePropertyChanged("Recipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RightFaxID {
            get {
                return this.RightFaxIDField;
            }
            set {
                if ((this.RightFaxIDField.Equals(value) != true)) {
                    this.RightFaxIDField = value;
                    this.RaisePropertyChanged("RightFaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Sent {
            get {
                return this.SentField;
            }
            set {
                if ((this.SentField.Equals(value) != true)) {
                    this.SentField = value;
                    this.RaisePropertyChanged("Sent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentBy {
            get {
                return this.SentByField;
            }
            set {
                if ((object.ReferenceEquals(this.SentByField, value) != true)) {
                    this.SentByField = value;
                    this.RaisePropertyChanged("SentBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SentStatus {
            get {
                return this.SentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SentStatusField, value) != true)) {
                    this.SentStatusField = value;
                    this.RaisePropertyChanged("SentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem))]
    public partial class DocumentItem : MOSSADDQueueDocument.ICEDocument.ListItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationBody {
            get {
                return this.NotificationBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationBodyField, value) != true)) {
                    this.NotificationBodyField = value;
                    this.RaisePropertyChanged("NotificationBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationEMail {
            get {
                return this.NotificationEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationEMailField, value) != true)) {
                    this.NotificationEMailField = value;
                    this.RaisePropertyChanged("NotificationEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSubject {
            get {
                return this.NotificationSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSubjectField, value) != true)) {
                    this.NotificationSubjectField = value;
                    this.RaisePropertyChanged("NotificationSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueDocumentItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class QueueDocumentItem : MOSSADDQueueDocument.ICEDocument.DocumentItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckedOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.QueueLibrary LibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.QueueDocumentPriority PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TravelerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelerLastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assigned {
            get {
                return this.AssignedField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedField, value) != true)) {
                    this.AssignedField = value;
                    this.RaisePropertyChanged("Assigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckedOut {
            get {
                return this.CheckedOutField;
            }
            set {
                if ((this.CheckedOutField.Equals(value) != true)) {
                    this.CheckedOutField = value;
                    this.RaisePropertyChanged("CheckedOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.QueueLibrary Library {
            get {
                return this.LibraryField;
            }
            set {
                if ((this.LibraryField.Equals(value) != true)) {
                    this.LibraryField = value;
                    this.RaisePropertyChanged("Library");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentPriority Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QMS {
            get {
                return this.QMSField;
            }
            set {
                if ((object.ReferenceEquals(this.QMSField, value) != true)) {
                    this.QMSField = value;
                    this.RaisePropertyChanged("QMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelerFirstName {
            get {
                return this.TravelerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerFirstNameField, value) != true)) {
                    this.TravelerFirstNameField = value;
                    this.RaisePropertyChanged("TravelerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TravelerID {
            get {
                return this.TravelerIDField;
            }
            set {
                if ((this.TravelerIDField.Equals(value) != true)) {
                    this.TravelerIDField = value;
                    this.RaisePropertyChanged("TravelerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelerLastName {
            get {
                return this.TravelerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerLastNameField, value) != true)) {
                    this.TravelerLastNameField = value;
                    this.RaisePropertyChanged("TravelerLastName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelerDocumentItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class TravelerDocumentItem : MOSSADDQueueDocument.ICEDocument.DocumentItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.DocumentStatus DocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.TravelerLibrary LibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoleculeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlacementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequirementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TravelerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelerLastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.DocumentStatus DocumentStatus {
            get {
                return this.DocumentStatusField;
            }
            set {
                if ((this.DocumentStatusField.Equals(value) != true)) {
                    this.DocumentStatusField = value;
                    this.RaisePropertyChanged("DocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Folder {
            get {
                return this.FolderField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderField, value) != true)) {
                    this.FolderField = value;
                    this.RaisePropertyChanged("Folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdatedBy {
            get {
                return this.LastUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByField, value) != true)) {
                    this.LastUpdatedByField = value;
                    this.RaisePropertyChanged("LastUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.TravelerLibrary Library {
            get {
                return this.LibraryField;
            }
            set {
                if ((this.LibraryField.Equals(value) != true)) {
                    this.LibraryField = value;
                    this.RaisePropertyChanged("Library");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MoleculeID {
            get {
                return this.MoleculeIDField;
            }
            set {
                if ((this.MoleculeIDField.Equals(value) != true)) {
                    this.MoleculeIDField = value;
                    this.RaisePropertyChanged("MoleculeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlacementID {
            get {
                return this.PlacementIDField;
            }
            set {
                if ((this.PlacementIDField.Equals(value) != true)) {
                    this.PlacementIDField = value;
                    this.RaisePropertyChanged("PlacementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequirementType {
            get {
                return this.RequirementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequirementTypeField, value) != true)) {
                    this.RequirementTypeField = value;
                    this.RaisePropertyChanged("RequirementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelerFirstName {
            get {
                return this.TravelerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerFirstNameField, value) != true)) {
                    this.TravelerFirstNameField = value;
                    this.RaisePropertyChanged("TravelerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TravelerID {
            get {
                return this.TravelerIDField;
            }
            set {
                if ((this.TravelerIDField.Equals(value) != true)) {
                    this.TravelerIDField = value;
                    this.RaisePropertyChanged("TravelerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelerLastName {
            get {
                return this.TravelerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelerLastNameField, value) != true)) {
                    this.TravelerLastNameField = value;
                    this.RaisePropertyChanged("TravelerLastName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PacketDocumentItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class PacketDocumentItem : MOSSADDQueueDocument.ICEDocument.DocumentItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.DocumentStatus DocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.ExternalSystem ExternalSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlacementIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QMSetupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TravelerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.DocumentStatus DocumentStatus {
            get {
                return this.DocumentStatusField;
            }
            set {
                if ((this.DocumentStatusField.Equals(value) != true)) {
                    this.DocumentStatusField = value;
                    this.RaisePropertyChanged("DocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.ExternalSystem ExternalSystem {
            get {
                return this.ExternalSystemField;
            }
            set {
                if ((this.ExternalSystemField.Equals(value) != true)) {
                    this.ExternalSystemField = value;
                    this.RaisePropertyChanged("ExternalSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((this.FacilityIDField.Equals(value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlacementID {
            get {
                return this.PlacementIDField;
            }
            set {
                if ((this.PlacementIDField.Equals(value) != true)) {
                    this.PlacementIDField = value;
                    this.RaisePropertyChanged("PlacementID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QMSetupID {
            get {
                return this.QMSetupIDField;
            }
            set {
                if ((this.QMSetupIDField.Equals(value) != true)) {
                    this.QMSetupIDField = value;
                    this.RaisePropertyChanged("QMSetupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TravelerID {
            get {
                return this.TravelerIDField;
            }
            set {
                if ((this.TravelerIDField.Equals(value) != true)) {
                    this.TravelerIDField = value;
                    this.RaisePropertyChanged("TravelerID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum DocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueLibrary", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum QueueLibrary : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bulkload = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Queue = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Bulkload = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueDocumentPriority", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum QueueDocumentPriority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueDocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum QueueDocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hold = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reject = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Incomplete = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelerLibrary", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum TravelerLibrary : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Traveler = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    [System.SerializableAttribute()]
    public partial class WCFErrorMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<object, object> ContextDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TrackingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UtcTimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<object, object> ContextData {
            get {
                return this.ContextDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextDataField, value) != true)) {
                    this.ContextDataField = value;
                    this.RaisePropertyChanged("ContextData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TrackingID {
            get {
                return this.TrackingIDField;
            }
            set {
                if ((this.TrackingIDField.Equals(value) != true)) {
                    this.TrackingIDField = value;
                    this.RaisePropertyChanged("TrackingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UtcTimeStamp {
            get {
                return this.UtcTimeStampField;
            }
            set {
                if ((this.UtcTimeStampField.Equals(value) != true)) {
                    this.UtcTimeStampField = value;
                    this.RaisePropertyChanged("UtcTimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueStatusItem", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class QueueStatusItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueueCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueueStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueueCount {
            get {
                return this.QueueCountField;
            }
            set {
                if ((this.QueueCountField.Equals(value) != true)) {
                    this.QueueCountField = value;
                    this.RaisePropertyChanged("QueueCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueStatus {
            get {
                return this.QueueStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.QueueStatusField, value) != true)) {
                    this.QueueStatusField = value;
                    this.RaisePropertyChanged("QueueStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PacketDocumentArgs", Namespace="http://schemas.datacontract.org/2004/07/AMN.EnterpriseServices.DocumentServices")]
    [System.SerializableAttribute()]
    public partial class PacketDocumentArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.ExternalSystem ExternalSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MOSSADDQueueDocument.ICEDocument.PacketLibrary LibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlacementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QMSetupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UniqueIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.ExternalSystem ExternalSystem {
            get {
                return this.ExternalSystemField;
            }
            set {
                if ((this.ExternalSystemField.Equals(value) != true)) {
                    this.ExternalSystemField = value;
                    this.RaisePropertyChanged("ExternalSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MOSSADDQueueDocument.ICEDocument.PacketLibrary Library {
            get {
                return this.LibraryField;
            }
            set {
                if ((this.LibraryField.Equals(value) != true)) {
                    this.LibraryField = value;
                    this.RaisePropertyChanged("Library");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlacementId {
            get {
                return this.PlacementIdField;
            }
            set {
                if ((this.PlacementIdField.Equals(value) != true)) {
                    this.PlacementIdField = value;
                    this.RaisePropertyChanged("PlacementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QMSetupID {
            get {
                return this.QMSetupIDField;
            }
            set {
                if ((this.QMSetupIDField.Equals(value) != true)) {
                    this.QMSetupIDField = value;
                    this.RaisePropertyChanged("QMSetupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UniqueId {
            get {
                return this.UniqueIdField;
            }
            set {
                if ((this.UniqueIdField.Equals(value) != true)) {
                    this.UniqueIdField = value;
                    this.RaisePropertyChanged("UniqueId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PacketLibrary", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum PacketLibrary : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Packet = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recipient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Packet = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Recipient = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Events_Packet = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Site", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
    public enum Site : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facility = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Traveler = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Packet = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Queue = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Facility = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider_Packet = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Events_Packet = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
        "es", ConfigurationName="ICEDocument.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentByQMSetup", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentByQMSetupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentByQMSetupWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.PacketDocumentItem GetPacketDocumentByQMSetup(int QMSetupId, MOSSADDQueueDocument.ICEDocument.ExternalSystem externalSystem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateRecipientItem", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateRecipientItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateRecipientItemWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void UpdateRecipientItem(MOSSADDQueueDocument.ICEDocument.RecipientItem item, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SiteExists", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SiteExistsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SiteExistsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        bool SiteExists(int siteIndex, MOSSADDQueueDocument.ICEDocument.Site site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/TestOutParam", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/TestOutParamResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/TestOutParamWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        string TestOutParam(out string output, string assigned);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddQueueDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddQueueDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddQueueDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        System.Guid AddQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem item, System.Guid sourceDocumentID, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/FindDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/FindDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/FindDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] FindDocuments(string assigned, bool unassigned, int travelerID, string[] faxRecipients, string title, string email, System.DateTime startCreateDate, System.DateTime endCreateDate, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus[] statusCollection, MOSSADDQueueDocument.ICEDocument.QueueDocumentPriority priority, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, uint rowLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueDocumentItem GetQueueDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, bool checkout, string assigned, bool includeFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetNextQueueDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetNextQueueDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetNextQueueDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueDocumentItem GetNextQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, string assigned, bool includeFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocumentFile", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueDocumentFileWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        byte[] GetQueueDocumentFile(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UndoCheckout", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UndoCheckoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UndoCheckoutWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void UndoCheckout(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateQueueDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateQueueDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateQueueDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void UpdateQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem item, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, bool checkin, string fromStatus, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteQueueDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteQueueDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteQueueDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void DeleteQueueDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueStatusCounts", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueStatusCountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueueStatusCountsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueStatusItem[] GetQueueStatusCounts(MOSSADDQueueDocument.ICEDocument.QueueLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetExpiredQueueDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetExpiredQueueDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetExpiredQueueDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] GetExpiredQueueDocuments(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteExpiredQueueDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteExpiredQueueDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteExpiredQueueDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        string[] DeleteExpiredQueueDocuments(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus status, System.DateTime expirationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        System.Guid AddTravelerDocument(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocument2", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocument2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/AddTravelerDocument2WCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem AddTravelerDocument2(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateTravelerDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateTravelerDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdateTravelerDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void UpdateTravelerDocument(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteTravelerDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteTravelerDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/DeleteTravelerDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void DeleteTravelerDocument(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem GetTravelerDocument(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary type, bool includeFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem[] GetTravelerDocuments(int travelerID, string folder, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library, MOSSADDQueueDocument.ICEDocument.DocumentStatus status, int moleculeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerMiscellaneousDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerMiscellaneousDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerMiscellaneousDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem[] GetTravelerMiscellaneousDocuments(int travelerID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerIncompleteDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerIncompleteDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerIncompleteDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] GetTravelerIncompleteDocuments(int travelerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentFile", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentFileWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        byte[] GetTravelerDocumentFile(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentsUrl", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentsUrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerDocumentsUrlWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        string GetTravelerDocumentsUrl(int travelerID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFolders", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFoldersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFoldersWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        string GetTravelerFolders(MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFolderPermissions", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFolderPermissionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetTravelerFolderPermissionsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        string GetTravelerFolderPermissions(int travelerID, string folder, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SendPacketDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SendPacketDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/SendPacketDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        System.Guid SendPacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem item, MOSSADDQueueDocument.ICEDocument.RecipientItem[] recipients, string subject, string body, string senderName, string senderEmail, MOSSADDQueueDocument.ICEDocument.PacketLibrary library, bool isBodyHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/ResendPacketDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/ResendPacketDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/ResendPacketDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void ResendPacketDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.RecipientItem[] recipients, string subject, string body, string senderName, string senderEmail, MOSSADDQueueDocument.ICEDocument.PacketLibrary library, bool isBodyHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdatePacketDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdatePacketDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/UpdatePacketDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        void UpdatePacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem item, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocument", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.PacketDocumentItem GetPacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentArgs packetDocumentArgs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetEventPacketDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetEventPacketDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetEventPacketDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.PacketDocumentItem[] GetEventPacketDocuments(int travelerID, int qmSetupId, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocuments", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.PacketDocumentItem[] GetPacketDocuments(int travelerID, int placementID, int facilityID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentRecipients", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentRecipientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentRecipientsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.RecipientItem[] GetPacketDocumentRecipients(System.Guid documentID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentFile", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetPacketDocumentFileWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        byte[] GetPacketDocumentFile(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueuedPacketRecipients", ReplyAction="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueuedPacketRecipientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MOSSADDQueueDocument.ICEDocument.WCFErrorMessage), Action="http://www.amnhealthcare.com/wcf/2008/01/24/AMN.EnterpriseServices.DocumentServic" +
            "es/IDocumentService/GetQueuedPacketRecipientsWCFErrorMessageFault", Name="WCFErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/AMN.Framework.Common")]
        MOSSADDQueueDocument.ICEDocument.RecipientItem[] GetQueuedPacketRecipients(MOSSADDQueueDocument.ICEDocument.PacketLibrary library);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : MOSSADDQueueDocument.ICEDocument.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<MOSSADDQueueDocument.ICEDocument.IDocumentService>, MOSSADDQueueDocument.ICEDocument.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MOSSADDQueueDocument.ICEDocument.PacketDocumentItem GetPacketDocumentByQMSetup(int QMSetupId, MOSSADDQueueDocument.ICEDocument.ExternalSystem externalSystem) {
            return base.Channel.GetPacketDocumentByQMSetup(QMSetupId, externalSystem);
        }
        
        public void UpdateRecipientItem(MOSSADDQueueDocument.ICEDocument.RecipientItem item, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            base.Channel.UpdateRecipientItem(item, library);
        }
        
        public bool SiteExists(int siteIndex, MOSSADDQueueDocument.ICEDocument.Site site) {
            return base.Channel.SiteExists(siteIndex, site);
        }
        
        public string TestOutParam(out string output, string assigned) {
            return base.Channel.TestOutParam(out output, assigned);
        }
        
        public System.Guid AddQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem item, System.Guid sourceDocumentID, string user) {
            return base.Channel.AddQueueDocument(item, sourceDocumentID, user);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] FindDocuments(string assigned, bool unassigned, int travelerID, string[] faxRecipients, string title, string email, System.DateTime startCreateDate, System.DateTime endCreateDate, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus[] statusCollection, MOSSADDQueueDocument.ICEDocument.QueueDocumentPriority priority, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, uint rowLimit) {
            return base.Channel.FindDocuments(assigned, unassigned, travelerID, faxRecipients, title, email, startCreateDate, endCreateDate, statusCollection, priority, library, rowLimit);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentItem GetQueueDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, bool checkout, string assigned, bool includeFile) {
            return base.Channel.GetQueueDocument(uniqueID, library, checkout, assigned, includeFile);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentItem GetNextQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, string assigned, bool includeFile) {
            return base.Channel.GetNextQueueDocument(library, assigned, includeFile);
        }
        
        public byte[] GetQueueDocumentFile(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library) {
            return base.Channel.GetQueueDocumentFile(uniqueID, library);
        }
        
        public void UndoCheckout(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library) {
            base.Channel.UndoCheckout(uniqueID, library);
        }
        
        public void UpdateQueueDocument(MOSSADDQueueDocument.ICEDocument.QueueDocumentItem item, MOSSADDQueueDocument.ICEDocument.QueueLibrary library, bool checkin, string fromStatus, string user) {
            base.Channel.UpdateQueueDocument(item, library, checkin, fromStatus, user);
        }
        
        public void DeleteQueueDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.QueueLibrary library) {
            base.Channel.DeleteQueueDocument(uniqueID, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueStatusItem[] GetQueueStatusCounts(MOSSADDQueueDocument.ICEDocument.QueueLibrary library) {
            return base.Channel.GetQueueStatusCounts(library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] GetExpiredQueueDocuments(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus status) {
            return base.Channel.GetExpiredQueueDocuments(library, status);
        }
        
        public string[] DeleteExpiredQueueDocuments(MOSSADDQueueDocument.ICEDocument.QueueLibrary library, MOSSADDQueueDocument.ICEDocument.QueueDocumentStatus status, System.DateTime expirationDate) {
            return base.Channel.DeleteExpiredQueueDocuments(library, status, expirationDate);
        }
        
        public System.Guid AddTravelerDocument(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item) {
            return base.Channel.AddTravelerDocument(item);
        }
        
        public MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem AddTravelerDocument2(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item) {
            return base.Channel.AddTravelerDocument2(item);
        }
        
        public void UpdateTravelerDocument(MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem item) {
            base.Channel.UpdateTravelerDocument(item);
        }
        
        public void DeleteTravelerDocument(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            base.Channel.DeleteTravelerDocument(travelerID, uniqueID, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem GetTravelerDocument(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary type, bool includeFile) {
            return base.Channel.GetTravelerDocument(travelerID, uniqueID, type, includeFile);
        }
        
        public MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem[] GetTravelerDocuments(int travelerID, string folder, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library, MOSSADDQueueDocument.ICEDocument.DocumentStatus status, int moleculeID) {
            return base.Channel.GetTravelerDocuments(travelerID, folder, library, status, moleculeID);
        }
        
        public MOSSADDQueueDocument.ICEDocument.TravelerDocumentItem[] GetTravelerMiscellaneousDocuments(int travelerID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            return base.Channel.GetTravelerMiscellaneousDocuments(travelerID, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.QueueDocumentItem[] GetTravelerIncompleteDocuments(int travelerID) {
            return base.Channel.GetTravelerIncompleteDocuments(travelerID);
        }
        
        public byte[] GetTravelerDocumentFile(int travelerID, System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            return base.Channel.GetTravelerDocumentFile(travelerID, uniqueID, library);
        }
        
        public string GetTravelerDocumentsUrl(int travelerID, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            return base.Channel.GetTravelerDocumentsUrl(travelerID, library);
        }
        
        public string GetTravelerFolders(MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            return base.Channel.GetTravelerFolders(library);
        }
        
        public string GetTravelerFolderPermissions(int travelerID, string folder, MOSSADDQueueDocument.ICEDocument.TravelerLibrary library) {
            return base.Channel.GetTravelerFolderPermissions(travelerID, folder, library);
        }
        
        public System.Guid SendPacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem item, MOSSADDQueueDocument.ICEDocument.RecipientItem[] recipients, string subject, string body, string senderName, string senderEmail, MOSSADDQueueDocument.ICEDocument.PacketLibrary library, bool isBodyHtml) {
            return base.Channel.SendPacketDocument(item, recipients, subject, body, senderName, senderEmail, library, isBodyHtml);
        }
        
        public void ResendPacketDocument(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.RecipientItem[] recipients, string subject, string body, string senderName, string senderEmail, MOSSADDQueueDocument.ICEDocument.PacketLibrary library, bool isBodyHtml) {
            base.Channel.ResendPacketDocument(uniqueID, recipients, subject, body, senderName, senderEmail, library, isBodyHtml);
        }
        
        public void UpdatePacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentItem item, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            base.Channel.UpdatePacketDocument(item, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.PacketDocumentItem GetPacketDocument(MOSSADDQueueDocument.ICEDocument.PacketDocumentArgs packetDocumentArgs) {
            return base.Channel.GetPacketDocument(packetDocumentArgs);
        }
        
        public MOSSADDQueueDocument.ICEDocument.PacketDocumentItem[] GetEventPacketDocuments(int travelerID, int qmSetupId, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            return base.Channel.GetEventPacketDocuments(travelerID, qmSetupId, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.PacketDocumentItem[] GetPacketDocuments(int travelerID, int placementID, int facilityID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            return base.Channel.GetPacketDocuments(travelerID, placementID, facilityID, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.RecipientItem[] GetPacketDocumentRecipients(System.Guid documentID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            return base.Channel.GetPacketDocumentRecipients(documentID, library);
        }
        
        public byte[] GetPacketDocumentFile(System.Guid uniqueID, MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            return base.Channel.GetPacketDocumentFile(uniqueID, library);
        }
        
        public MOSSADDQueueDocument.ICEDocument.RecipientItem[] GetQueuedPacketRecipients(MOSSADDQueueDocument.ICEDocument.PacketLibrary library) {
            return base.Channel.GetQueuedPacketRecipients(library);
        }
    }
}
